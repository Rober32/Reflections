How did viewing a diff between two versions of a file help you see the bug that was introduced?

When comparing the two files, it becomes far easier to see the difference between two lines when they are directly 
compared. 


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
If I know that a previous version was working and my current one isn't I can easily compare my current version to 
a previous working version and spot the error. 

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

If you manually choose when to commit you can separate it into logical sections like fixing all typos in a feature.
If you have it automatically saved the sections will not follow a logical pattern.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Saving multiple files in one commit means that any features that are spread across multiple files can be changed at 
the same time such as a variable name or a character in a book. In google docs I don't know why you can't do this. 

How can you use the commands git log and git diff to view the history of files?

You can use git log to see a summary of all of the commits. You can then use git diff to directly compare the 
differences between two commits. 

How might using version control make you more confident to make changes that could break something?

It means that you have a safety net. If you break something you can just go back to a previous version and it doesn't matter. 

Now that you have your workspace set up, what do you want to try using Git for?

Em I don't know. I guess I want to use it for whatever project the course tells me to do? Weird question. 

What happens when you initialize a repository? Why do you need to do it?

If you clone files then you don't need to since the metadata is already transferred but if you're setting up from scratch 
then you need it to store your metadata

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is a place where commits can be held from the working directory before they are put in the repository. 
They allow you to add commits at different times to the repository rather than all at once. 





























